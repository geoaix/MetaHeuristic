

.. _sphx_glr_auto_examples_plot.py:


============================
Plotting MetaHeuristics - Basic Use
============================

An example plot of :class:`feature_selection.HarmonicSearch




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_002.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_003.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_004.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Number of Features Selected: 
             HS:  0.8 %      GA:  0.766666666667 %
    Accuracy of the classifier: 
             HS:  0.974700609783     GA:  0.97996667133




|


.. code-block:: python

    from feature_selection import HarmonicSearch, GeneticAlgorithm
    from sklearn.datasets import load_breast_cancer
    from sklearn.svm import SVC

    dataset = load_breast_cancer()
    X, y = dataset['data'], dataset['target_names'].take(dataset['target'])

    # Classifier to be used in the metaheuristic
    clf = SVC()

    hs = HarmonicSearch(classifier=clf, random_state=0, make_logbook=True,
                        repeat=2)

    ga = GeneticAlgorithm(classifier=clf, random_state=1, make_logbook=True,
                          repeat=2)

    # Fit the classifier
    hs.fit(X, y, normalize=True)
    ga.fit(X, y, normalize=True)

    print("Number of Features Selected: \n \t HS: ", sum(hs.best_mask_)/X.shape[1],
          "% \t GA: ", sum(ga.best_mask_)/X.shape[1], "%")
    print("Accuracy of the classifier: \n \t HS: ", hs.fitness_[0], "\t GA: ",
          ga.fitness_[0])

    # Transformed dataset
    X_hs = hs.transform(X)
    X_ga = ga.transform(X)

    # Plot the results of each test
    hs.plot_results()
    ga.plot_results()

**Total running time of the script:** ( 0 minutes  14.958 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot.py <plot.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot.ipynb <plot.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
